<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>博客 on 程序员安仔</title><link>https://www.hotmindshare.com/blog/</link><description>Recent content in 博客 on 程序员安仔</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright>粤ICP备2023148789号</copyright><atom:link href="https://www.hotmindshare.com/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>10年老程序员的技术来源推荐</title><link>https://www.hotmindshare.com/blog/2023/12/pdks_20231221/</link><pubDate>Thu, 21 Dec 2023 16:47:06 +0800</pubDate><guid>https://www.hotmindshare.com/blog/2023/12/pdks_20231221/</guid><description>作为一个10 年左右的老程序员，今天来现身说法一下。平常看到社区上好多的文章或者回答都列出了详尽的各种分类的技术社区网站或 APP，我心里其实就在想，真的有人会全部都用起来吗？我可以保证的跟你们说，不可能，跟技术的本质是一样的，技术是重质不重量的。
大部分的人，看到那么详尽的回答或文章，第一感觉往往是：&amp;ldquo;哇，这个好，先收藏了，以后再慢慢看。&amp;ldquo;然后就在你的收藏库雪藏了，很少再翻出来。不用看，说的就是我哈哈，或许你也是，所以今天我就来说说我那么多年以来，还一直每天在用的一些国内外技术平台/技术社区/APP，如何让你在不落下各种技术的前沿发展之余也可以深耕自己的技术深度。
极客时间 毋容置疑，极客时间 app 是我刚应届出来工作不久就发布的一个技术教程 APP。我可是第一批刚发布就使用到现在的老客户(5 年多资深知识付费码农)了：
无论是前端、后端、人工智能，还是产品管理、项目管理，甚至是个人提升，它都能提供丰富的课程资源。 **这些课程大多来自业界的一线专家，这意味着你能从实战出发，学习到最前沿、最实用的知识。**而且，这些课程通常结构清晰，深入浅出，适合不同层次的学习者。
这里简单举几个例子说说：
极客时间的学习路径(从入门到进阶) 各种 IT 技术职业的学习路径，比如前端、后端、测试、运维、产品、运营、设计、架构师、大数据、人工智能等等； 各种职业由浅到深的技术技能规划； 来自各种一线大厂技术专家的实战课程和经验之谈； 极客时间训练营 系统化学习路径：提供结构化的学习计划，帮助学员按部就班地掌握知识，这对于初学者或希望系统提升技能的人士尤为有用；
行业专家授课：课程常由行业内的专家或资深从业者授课，学员可以直接从业界领袖那里学习最新、最实用的知识和技巧；
实战案例与项目：通过实际的案例学习和项目练习，帮助学员更好地理解理论知识，并将其应用于实际工作中；
社群支持与互动：提供社群支持，如论坛或群聊甚至是共享代码仓库，供学员交流心得、解决问题；
InfoQ InfoQ.cn 是一个专注于软件开发、IT 技术和项目管理领域的专业网站，它是 InfoQ.com 的中文版本。 **InfoQ.cn 致力于为软件开发者、架构师、项目经理以及 IT 专业人士提供最新的行业资讯、技术动态、趋势分析以及实践案例分享。**该网站的内容涵盖了广泛的技术主题，包括但不限于以下几个方面：
软件开发：涉及编程语言、框架、开发工具、最佳实践等方面的内容。例如，涵盖 Java、Python、JavaScript 等流行语言的最新动态和应用案例。
架构设计：包括微服务、大数据架构、云计算架构、分布式系统等先进架构的理论、实践和案例分析。
AI 与机器学习：提供人工智能、机器学习、深度学习等领域的技术动态、应用案例和开发实践。
敏捷开发与项目管理：分享敏捷开发方法、项目管理技巧、团队协作工具等相关信息。
DevOps 和自动化测试：探讨软件交付流程自动化、持续集成/持续部署（CI/CD）、测试自动化等话题。
IT 行业资讯：提供行业新闻、技术会议、专家访谈、技术社区动态等内容。
我的话经常有空也会逛一下这个网站，毕竟它算是代表了国内比较权威的技术社区了，而且它的内容也是比较全面的，不仅仅是技术，还有一些管理方面的内容，比如敏捷开发、项目管理等等。
你会发现，上面的文章有不少还是从国外的一些知名技术社区翻译过来的，这顺带提供了不少国外的前沿技术研究和实践。
除此以外，你时不时还可以在这里看到一些某技术的深度文章，对于自己技术的提升有很大帮助。
Daily.dev Daily.dev 是一个专为开发者设计的工具，它主要作为一个**内容聚合平台，收集来自互联网各个角落的开发相关的新闻、文章和博客帖子。**这个工具一般是直接安装到我的 Chrome 浏览器上作为插件，让我每次一打开新空白页，就自自然然可以看到国外一些最新的技术咨询，方便我自己去了解和深入技术细节。不过有个缺点是，它主要是英文为主，所以如果你英文不好的话，可能就不太适合你了。(学技术嘛，英文还是很重要的其实&amp;hellip;)
以下是对 Daily.dev 主要特点和功能的介绍：
内容聚合：Daily.dev 从多个来源汇聚信息，包括知名的技术博客、新闻站点、社区论坛等，确保提供广泛而深入的行业视角；
个性化推荐：用户可以根据自己的兴趣和专业领域定制内容流。随着用户与平台的互动，Daily.dev 可以更精准地推荐相关内容；
社区驱动：Daily.dev 的内容很大程度上是由其社区成员贡献和筛选的。用户可以分享他们认为有价值的文章，促进知识的共享。甚至你可以通过Public Squad加入来自全球各地的技术小队，与其他开发者一起分享和讨论；
总结式阅读：Daily.dev 在设计时注重用户体验，当你看到一篇感兴趣的文章，但又不想去阅读全文的时候，你可以简单点击一下这个文章简介，它就会直接给你一个 TLDR(文章总结)，让你快速知道这个文章的内容是不是你想要的；
完全免费：该平台通常对所有用户免费开放，那么多实用的功能还免费，良心。
Medium Medium 的设计初衷是提供一个更加丰富、深入的内容平台，相比于传统的微博或博客服务，它更加注重内容的质量和深度。Medium 被广泛用于分享和阅读各种主题的文章，包括但不限于技术、创业、写作、文化、政治等领域。这里面的文章都是很新的，而且质量也是很高的，很多都是一些国外著名大牛写的，而且还有很多是中文翻译过来的，所以你可以在这里看到很多国外的前沿技术研究和实践。</description></item><item><title>这款新兴的 IDEA 插件封神了！</title><link>https://www.hotmindshare.com/blog/2023/12/%E8%BF%99%E6%AC%BE%E6%96%B0%E5%85%B4%E7%9A%84-idea-%E6%8F%92%E4%BB%B6%E5%B0%81%E7%A5%9E%E4%BA%86/</link><pubDate>Wed, 20 Dec 2023 13:16:47 +0800</pubDate><guid>https://www.hotmindshare.com/blog/2023/12/%E8%BF%99%E6%AC%BE%E6%96%B0%E5%85%B4%E7%9A%84-idea-%E6%8F%92%E4%BB%B6%E5%B0%81%E7%A5%9E%E4%BA%86/</guid><description>IDEA 是一款功能强大的集成开发环境（IDE）插件，它可以帮助开发人员更加高效地编写、调试和部署软件应用程序。
我们在编写完接口代码后需要进行接口调试等操作，一般需要打开额外的调试工具。今天就给大家介绍一款 IDEA 插件：Apipost-Helper-2.0。用它，代码写完直接编辑器内调试、还支持生成接口文档、接口树等功能，并且完全无偿使用！超好用！
这款插件由 Apipost 团队开发，官方介绍中提到：用于 IDEA 项目快速生成 API 文档，快速查询接口、接口代码功能，并支持在 IDEA 中进行 API 调试操作。
插件安装&amp;amp;更新
在 IDEA 编辑器插件中心输入 Apipost 搜索安装：Apipost-Helper-2.0 （支持版本：19.3 月—23.2 月 IDEA 版本 ）
插件配置
使用 Apipost IDEA 插件前需要在 IDEA 设置中进行配置，云端域名默认为：
https://sync-project-ide.apipost.cn ，
无需修改。
请求 token 可以在Apipost 「项目设置」- 「对外能力」-「openAPI」
中创建使用，也支持在 IDEA 中直接获取请求 token。
无侵入生成 API 文档
编写完代码后，只需右键 upload 同步接口即可快速将源码中包含的 API 以及注解自动生成 API 文档，并生成可以访问的链接。无需任何额外操作。
快速调试（类似 Postman）
因初次访问，为防止爬虫和人机识别，请关注微信公众号，回复:‘验证码‘获取验证码来解锁全文 解锁内容 编写完代码后，点击右侧图标，可以进行快速调试。
根据 API 搜索对应源码、接口树
右侧接口调试栏新增搜索功能可以根据 API 搜索对应源码、接口树。
· 根据 API 搜索对应源码：</description></item><item><title>Git 如何撤回已 Push 的代码</title><link>https://www.hotmindshare.com/blog/2023/12/git-%E5%A6%82%E4%BD%95%E6%92%A4%E5%9B%9E%E5%B7%B2-push-%E7%9A%84%E4%BB%A3%E7%A0%81/</link><pubDate>Tue, 19 Dec 2023 22:14:50 +0800</pubDate><guid>https://www.hotmindshare.com/blog/2023/12/git-%E5%A6%82%E4%BD%95%E6%92%A4%E5%9B%9E%E5%B7%B2-push-%E7%9A%84%E4%BB%A3%E7%A0%81/</guid><description>在日常的开发中，我们经常使用 Git 来进行版本控制。有时候，我们可能会不小心将错误的代码 Push 到远程仓库，或者想要在本地回退到之前的某个版本重新开发。
或者像我一样，写了一些感觉以后很有用的优化方案 push 到线上，又接到了一个新的需求。但是呢，项目比较重要，没有经过测试的方案不能轻易上线，为了承接需求只能先把 push 上去的优化方案先下掉。
现在我的分支是这样的，我想要在本地和远程仓库中都恢复到help 文档提交的部分。
注意 在执行这些操作之前，请确保完全理解它们的影响，特别是在多人协作的项目中。 对于受保护的分支（如主分支或发布分支），可能无法执行强制推送。需要根据你的项目设置或团队规范来处理这种情况。 使用强制推送会改变远程仓库的历史，可能会给团队成员带来困扰。在这样做之前，最好与团队成员沟通。 最简单粗暴的方法 IntelliJ IDEA 方法 如果你的错误代码不是很多，那么你其实可以通过与你想要恢复到的 commit 进行对比，然后手动删除错误代码，然后删除不同的代码。
按住 ctrl 选择想要对比的两个 commit，然后选择 Compare Versions 就能通过对比删除掉你想要删除的代码。
这个方案在代码很简单时时非常有效的，甚至还能通过删除后最新 commit 和想要退回的 commit 在Compare一下保障代码一致。
但是这个方法对于代码比较复杂的情况来说就不太好处理了，如果涉及到繁杂的配置文件，那更是让人头疼。
而且，这样还会保留错误提交的记录，对于有强迫症的我来说，有点接受不能。对此，git 也有一套较为优雅的操作流程，同样能解决这个问题。
Git 命令方法 因初次访问，为防止爬虫和人机识别，请关注微信公众号，回复:‘验证码‘获取验证码来解锁全文 解锁内容 在 Git 中，要比较两个 commit 之间的代码变动，可以使用 git diff 命令。这个命令允许你查看两个不同 commit 之间的差异。以下是一些常用的方法：
基本用法:
git diff &amp;lt;commit1&amp;gt; &amp;lt;commit2&amp;gt; 这里 &amp;lt;commit1&amp;gt; 和 &amp;lt;commit2&amp;gt; 分别代表你想要比较的两个 commit 的哈希值。
这里注意一下，在使用 git diff 命令比较两个 commit 时，commit1 和 commit2 的顺序会影响显示的差异内容。命令 git diff &amp;lt;commit1&amp;gt; &amp;lt;commit2&amp;gt; 的作用是显示从 commit1 变化到 commit2 时代码发生的变动。</description></item></channel></rss>