<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nio on 程序员安仔</title><link>https://www.hotmindshare.com/tags/nio/</link><description>Recent content in nio on 程序员安仔</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright>粤ICP备2023148789号</copyright><lastBuildDate>Sun, 10 Dec 2023 16:04:57 +0800</lastBuildDate><atom:link href="https://www.hotmindshare.com/tags/nio/index.xml" rel="self" type="application/rss+xml"/><item><title>NIO</title><link>https://www.hotmindshare.com/interview/v4/nio/</link><pubDate>Sun, 10 Dec 2023 16:04:57 +0800</pubDate><guid>https://www.hotmindshare.com/interview/v4/nio/</guid><description>NIO 面试题 1. 什么是 IO Java 中 I/O 是以流为基础进行数据的输入输出的，所有数据被串行化(所谓串行化就是数据要按顺序进行输入输出)写入输出流。简单来说就是 java 通过 io 流方式和外部设备进行交互。
在 Java 类库中，IO 部分的内容是很庞大的，因为它涉及的领域很广泛：标准输入输出，文件的操作，网络上的数据传输流，字符串流，对象流等等等。
比如程序从服务器上下载图片，就是通过流的方式从网络上以流的方式到程序中，在到硬盘中
2. 在了解不同的 IO 之前先了解：同步与异步，阻塞与非阻塞的区别 同步，一个任务的完成之前不能做其他操作，必须等待（等于在打电话）异步，一个任务的完成之前，可以进行其他操作（等于在聊 QQ）阻塞，是相对于 CPU 来说的， 挂起当前线程，不能做其他操作只能等待非阻塞,，无须挂起当前线程，可以去执行其他操作
3. 什么是 BIO BIO：同步并阻塞，服务器实现一个连接一个线程，即客户端有连接请求时服务器端就需要启动一个线程进行处理，没处理完之前此线程不能做其他操作（如果是单线程的情况下，我传输的文件很大呢？），当然可以通过线程池机制改善。BIO 方式适用于连接数目比较小且固定的架构，这种方式对服务器资源要求比较高，并发局限于应用中，JDK1.4 以前的唯一选择，但程序直观简单易理解。
4. 什么是 NIO NIO:同步非阻塞，服务器实现一个连接一个线程，即客户端发送的连接请求都会注册到多路复用器上，多路复用器轮询到连接有 I/O 请求时才启动一个线程进行处理。NIO 方式适用于连接数目多且连接比较短（轻操作）的架构，比如聊天服务器，并发局限于应用中，编程比较复杂，JDK1.4 之后开始支持。
5. 什么是 AIO AIO：异步非阻塞，服务器实现模式为一个有效请求一个线程，客户端的 I/O 请求都是由操作系统先完成了再通知服务器应用去启动线程进行处理，AIO 方式使用于连接数目多且连接比较长（重操作）的架构，比如相册服务器，充分调用操作系统参与并发操作，编程比较复杂，JDK1.7 之后开始支持。.
AIO 属于 NIO 包中的类实现，其实 IO 主要分为 BIO 和 NIO，AIO 只是附加品，解决 IO 不能异步的实现
在以前很少有 Linux 系统支持 AIO，Windows 的 IOCP 就是该 AIO 模型。但是现在的服务器一般都是支持 AIO 操作</description></item></channel></rss>