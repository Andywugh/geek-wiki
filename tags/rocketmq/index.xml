<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rocketmq on 程序员安仔</title><link>https://www.hotmindshare.com/tags/rocketmq/</link><description>Recent content in rocketmq on 程序员安仔</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright>粤ICP备2023148789号</copyright><lastBuildDate>Sun, 10 Dec 2023 16:04:57 +0800</lastBuildDate><atom:link href="https://www.hotmindshare.com/tags/rocketmq/index.xml" rel="self" type="application/rss+xml"/><item><title>RocketMQ</title><link>https://www.hotmindshare.com/interview/v4/rocketmq/</link><pubDate>Sun, 10 Dec 2023 16:04:57 +0800</pubDate><guid>https://www.hotmindshare.com/interview/v4/rocketmq/</guid><description>RocketMQ 面试题 1、说说你们公司线上生产环境用的是什么消息中间件? 见【2、多个 mq 如何选型？】
2、多个 mq 如何选型？ MQ 描述 RabbitMQ erlang开发，对消息堆积的支持并不好，当大量消息积压的时候，会导致 RabbitMQ 的性能急剧下降。每秒钟可以处理几万到十几万条消息。 RocketMQ java开发，面向互联网集群化功能丰富，对在线业务的响应时延做了很多的优化，大多数情况下可以做到毫秒级的响应，每秒钟大概能处理几十万条消息。 Kafka Scala开发，面向日志功能丰富，性能最高。当你的业务场景中，每秒钟消息数量没有那么多的时候，Kafka 的时延反而会比较高。所以，Kafka 不太适合在线业务场景。 ActiveMQ java开发，简单，稳定，性能不如前面三个。小型系统用也ok，但是不推荐。推荐用互联网主流的。 3、为什么要使用 MQ？ 因为项目比较大，做了分布式系统，所有远程服务调用请求都是同步执行经常出问题，所以引入了 mq
作用 描述 解耦 系统耦合度降低，没有强依赖关系 异步 不需要同步执行的远程调用可以有效提高响应时间 削峰 请求达到峰值后，后端service还可以保持固定消费速率消费，不会被压垮 4、RocketMQ 由哪些角色组成，每个角色作用和特点是什么？ 角色 作用 Nameserver 无状态，动态列表；这也是和zookeeper的重要区别之一。zookeeper是有状态的。 Producer 消息生产者，负责发消息到Broker。 Broker 就是MQ本身，负责收发消息、持久化消息等。 Consumer 消息消费者，负责从Broker上拉取消息进行消费，消费完进行ack。 5、RocketMQ 中的 Topic 和 JMS 的 queue 有什么区别？ queue 就是来源于数据结构的 FIFO 队列。而 Topic 是个抽象的概念，每个 Topic 底层对应 N 个 queue，而数据也真实存在 queue 上的。
6、RocketMQ Broker 中的消息被消费后会立即删除吗？ 不会，每条消息都会持久化到 CommitLog 中，每个 Consumer 连接到 Broker 后会维持消费进度信息，当有消息消费后只是当前 Consumer 的消费进度（CommitLog 的 offset）更新了。</description></item></channel></rss>