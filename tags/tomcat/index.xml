<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tomcat on 程序员安仔</title><link>https://www.hotmindshare.com/tags/tomcat/</link><description>Recent content in tomcat on 程序员安仔</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright>粤ICP备2023148789号</copyright><lastBuildDate>Sun, 10 Dec 2023 16:04:57 +0800</lastBuildDate><atom:link href="https://www.hotmindshare.com/tags/tomcat/index.xml" rel="self" type="application/rss+xml"/><item><title>Tomcat</title><link>https://www.hotmindshare.com/interview/v4/tomcat/</link><pubDate>Sun, 10 Dec 2023 16:04:57 +0800</pubDate><guid>https://www.hotmindshare.com/interview/v4/tomcat/</guid><description>Tomcat 面试题 1. Tomcat 的缺省端口是多少，怎么修改？ 11）找到Tomcat目录下的conf文件夹 22）进入conf文件夹里面找到server.xml文件 33）打开server.xml文件 44）在server.xml文件里面找到下列信息 5&amp;lt;Connector connectionTimeout=&amp;#34;20000&amp;#34; port=&amp;#34;8080&amp;#34; protocol=&amp;#34;HTTP/1.1&amp;#34; redirectPort=&amp;#34;8443&amp;#34; uriEncoding=&amp;#34;utf-8&amp;#34;/&amp;gt; 6port=&amp;#34;8080&amp;#34;改成你想要的端口 2. tomcat 有哪几种 Connector 运行模式(优化)？ 1bio：传统的Java I/O操作，同步且阻塞IO。 2maxThreads=&amp;#34;150&amp;#34;//Tomcat使用线程来处理接收的每个请求。这个值表示Tomcat可创建的最大的线程 3数。默认值200。可以根据机器的时期性能和内存大小调整，一般可以在400-500。最大可以在800左右。 4minSpareThreads=&amp;#34;25&amp;#34;---Tomcat初始化时创建的线程数。默认值4。如果当前没有空闲线程，且没有超 5过maxThreads，一次性创建的空闲线程数量。Tomcat初始化时创建的线程数量也由此值设置。 6maxSpareThreads=&amp;#34;75&amp;#34;--一旦创建的线程超过这个值，Tomcat就会关闭不再需要的socket线程。默认 7值50。一旦创建的线程超过此数值，Tomcat会关闭不再需要的线程。线程数可以大致上用 “同时在线人数* 8每秒用户操作次数*系统平均操作时间” 来计算。 9acceptCount=&amp;#34;100&amp;#34;----指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请 10求数，超过这个数的请求将不予处理。默认值10。如果当前可用线程数为0，则将请求放入处理队列中。这个 11值限定了请求队列的大小，超过这个数值的请求将不予处理。 12connectionTimeout=&amp;#34;20000&amp;#34; --网络连接超时，默认值20000，单位：毫秒。设置为0表示永不超时， 13这样设置有隐患的。通常可设置为30000毫秒。 14nio：JDK1.4开始支持，同步阻塞或同步非阻塞IO。 15指定使用NIO模型来接受HTTP请求 16protocol=&amp;#34;org.apache.coyote.http11.Http11NioProtocol&amp;#34; 指定使用NIO模型来接受HTTP请 17求。默认是BlockingIO，配置为protocol=&amp;#34;HTTP/1.1&amp;#34; 18acceptorThreadCount=&amp;#34;2&amp;#34; 使用NIO模型时接收线程的数目 19aio(nio.2)：JDK7开始支持，异步非阻塞IO。 20apr：Tomcat将以JNI的形式调用Apache HTTP服务器的核心动态链接库来处理文件读取或网络传输操作， 21从而大大地 提高Tomcat对静态文件的处理性能。 22&amp;lt;!-- 23&amp;lt;Connector connectionTimeout=&amp;#34;20000&amp;#34; port=&amp;#34;8000&amp;#34; protocol=&amp;#34;HTTP/1.1&amp;#34; 24redirectPort=&amp;#34;8443&amp;#34; uriEncoding=&amp;#34;utf-8&amp;#34;/&amp;gt; 25--&amp;gt; 26&amp;lt;!-- protocol 启用 nio模式，(tomcat8默认使用的是nio)(apr模式利用系统级异步io) --&amp;gt; 27&amp;lt;!-- minProcessors最小空闲连接线程数--&amp;gt; 28&amp;lt;!-- maxProcessors最大连接线程数--&amp;gt; 29&amp;lt;!-- acceptCount允许的最大连接数，应大于等于maxProcessors--&amp;gt; 30&amp;lt;!-- enableLookups 如果为true,requst.</description></item></channel></rss>